# IntModel = bounded
# InvariantPolicy = Arguments
# SeparationPolicy = Regions
# AnnotationPolicy = None
# AbstractDomain = Pol

axiomatic Padding {

  logic type padding
  
}

type uint8 = 0..255

type int8 = -128..127

type int32 = -2147483648..2147483647

tag unsigned_charP = {
  uint8 unsigned_charM: 8;
}

type unsigned_charP = [unsigned_charP]

tag charP = {
  int8 charM: 8;
}

type charP = [charP]

tag voidP = {
}

type voidP = [voidP]

int32 abs(int32 a)
  requires (_C_8 : (a != ((- 2147483647) - 1)));
behavior default:
  ensures (_C_5 : ((_C_6 : (\result >= 0)) &&
                    (_C_7 : ((\result == \at(a,Old)) ||
                              (\result == (- \at(a,Old)))))));
{  
   (var int32 tmp);
   
   {  (if (a > 0) then (_C_4 : (tmp = a)) else (_C_3 : (tmp = (_C_2 : (
                                                              (_C_1 : 
                                                              (- a)) :> int32)))));
      
      (return tmp)
   }
}
